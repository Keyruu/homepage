---
import TableOfContentsHeading from "./TableOfContentsHeading.astro";
const { headings } = Astro.props;
const toc = buildToc(headings);

function buildToc(headings: Heading[]) {
  const toc: Toc[] = [];
  const parentHeadings = new Map();
  headings.forEach((h) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 1) {
      toc.push(heading);
    } else {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading);
    }
  });
  return toc;
}
---

<nav class="toc">
  <ul>
    {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
  </ul>
  <svg class="toc-progress" xmlns="http://www.w3.org/2000/svg">
    <path
      class="toc-marker"
      fill="none"
      stroke="currentColor"
      stroke-linecap="round"
      stroke-width="3"
      stroke-dashoffset="1"
      stroke-linejoin="round"></path>
  </svg>
</nav>

<style>
  nav.toc {
    position: relative;
    padding-left: 0;
  }

  ul {
    list-style-type: none;
    padding-left: 1.2rem;
  }

  svg.toc-progress {
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    color: var(--accent);
  }

  path.toc-marker {
    transition: stroke-dasharray 0.3s ease;
  }
</style>
